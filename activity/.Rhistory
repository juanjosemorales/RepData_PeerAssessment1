names(q4=="Short.Name")
which(names(q4) == "V5")
names(q4)[which(names(q4) == "V5")] <- "GDP"
names(q4)
names(q4)[which(names(q4) == "V2")] <- "GDP.Rank"
head(q4$V4)
names(q4)
head(q4$GDP.Rank)
head(q4$GDP)
class(q4$GDP)
q4$GDP <- as.numeric(q4$GDP)
q4$GDP
names(mcg2)
head(mcg2)
copy_mcg2 <- mcg2
names(mcg2) <- c("CountryCode", "GDP.Rank", "GDP.Country.Name", "GDP")
head(mcg2)
class(mcg2$GDP)
copy_mcg2 <- mcg2
mcg2$GDP.Rank <- as.numeric(mcg2$GDP.Rank)
mcg2$GDP
mcg2$GDP <- as.numeric(mcg2$GDP)
mcg2$GDP
?gsub
mcg2 <- copy_mcg2
head(mcg2)
mcg2$GDP.Rank <- as.numeric(mcg2$GDP.Rank)
copy_mcg2 <- mcg2
gsub( "\s", "" ,mcg2$GDP)
gsub( " ", "" ,mcg2$GDP)
mcg2$GDP <- gsub( " ", "" ,mcg2$GDP)
head(mcg2)
mcg2$GDP
mcg2$GDP <- as.numeric(mcg2$GDP)
mcg2
mcg2 <- copy_mcg2
head(mcg2)
gsub(" ", "", mcg2$GDP)
mcg2$GDP <- gsub(" ", "", mcg2$GDP)
mcg2$GDP <- gsub(",", "", mcg2$GDP)
mcg2$GDP
mcg2$GDP <- as.numeric(mcg2$GDP)
mcg2
head(mcg2)
class(mcg2$GDP)
names(e)
names(mcg2)
rm(ce)
rm(test)
q4 <- merge(e, mcg2)
head(q4)
q4_1 <- q4 %>% group_by(Income.Group) %>% summarize(GDP = mean(GDP))
q4_1
q4_1 <- q4 %>% group_by(Income.Group) %>% summarize(GDP.Rank = mean(GDP.Rank))
q4_1
quantile(GDP.Rank)
quantile(q4$GDP.Rank)
?table
table(quantile(q$GDP.Rank), q4$Income.Group )
table(quantile(q4$GDP.Rank), q4$Income.Group )
table(q4$Income.Group, quantile(q4$GDP.Rank))
library(Hmisc)
install.package("Hmisc")
install.packages("Hmisc")
?cug2
?cut2
library(Hmisc)
?cut2
t <- cut2(g4$GDP.Rank)
t <- cut2(q4$GDP.Rank)
head(t)
t
cut2(q4$GDP.Rank, quantile)
cut2(q4$GDP.Rank, quantile(q4$GDP.Rank))
quantile(q4$GDP.Rank)
cut_rank <- cut2(q4$GDP.Rank, quantile(q4$GDP.Rank))
nrow(cut_rank)
ncol(cut_rank)
length(cut_rank)
table(cut_rank, q4$Income.Group)
table(q4$Income.Group, cut_rank)
?quantile
quantile(q4$GDP.Rank, seq(0,1,0.2))
cut_rank <- quantile(q4$GDP.Rank, seq(0,1,0.2))
table(q4$Income.Group, cut_rank)
cut_rank <- cut2(q4$GDP.Rank, quantile(q4$GDP.Rank, seq(0,1,0.2)))
table(q4$Income.Group, cut_rank)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", dest="q4_1.csv")
q1 <- read.csv("q4_1.csv")
head(q1)
?strsplit
class(names(q1))
head(names(q1))
?grep
t <- grepl("wgtp", names(q1))
head(t)
t <- grep("wgtp", names(q1), value=TRUE)
head(t)
h <- strsplit(grep("wgtp", names(q1), value=TRUE))
h <- strsplit(names(q1), "wgtp")
h
h[123]
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", dest="q4_2.csv")
q2 <- read.csv("q4_2.csv")
head(q2)
head(q2$X.2)
head(q2$3.2)
head(q2$X.3)
q2 <- q2$X.3
head(q2)
?read.csv
q2 <- read.csv("q4_2.csv", header=FALSE)
head(q2)
q2 <- q2$V4
head(q2)
q2 <- read.csv("q4_2.csv", header=FALSE)
q2 <- q2$V5
head(q2)
which(q2=="")
q2 <- q2[(-1*which(q2=="")), ]
q2 <- q2[-(*which(q2=="")), ]
q2 <- q2[-(which(q2=="")), ]
q2 <- q2[-(which(q2==""))]
head(q2)
q2
q2 <- q2[-(which(q2==".."))]
q2
q2 <- q2[-(which(q2=="(millions of US dollars)"))]
q2 <- q2[-(which(q2=="(millions of US dollars)"))]
head(q2)
q2
q2 <- q2[1,1]
q2 <- q2[1]
q2
q2
q2
q2 <- read.csv("q4_2.csv", header=FALSE)
head(q2)
q2 <- q2[-which(q2$V1==""), ]
head(q2)
q2 <- q2$V5
head(q2)
?gsub
sub("," , "", q2)
sub("(,|\s" , "", q2)
sub("(,| " , "", q2)
sub("(,| )" , "", q2)
sub(",| " , "", q2)
sub(" " , "", q2)
sub("\s" , "", q2)
sub(" " , "", q2)
sub(" " , "", q2, fixed=TRUE)
gsub(".." , "", q2, fixed=TRUE)
q2
gsub("..|,| " , "", q2)
gsub("\.\.|,| " , "", q2)
gsub("\..|,| " , "", q2)
gsub("\\.\\.|,| " , "", q2)
q2 <- gsub("\\.\\.|,| " , "", q2)
q2
sub("", 0, q2)
q2
q2 <- q2[-which(q2=="")]
q2
as.numeric(q2)
q2 <- as.numeric(q2)
mean(q2)
sum(q2)
sum(q2) / 190
sum(q2) / 233
head(mcg)
mcg
q2 <- read.csv("q2_2.csv", header=FALSE)
q2 <- read.csv("q4_2.csv", header=FALSE)
head(q2)
q2
head(12)
head(q2)
q2 <- q2[-which(q2$V1==""), ]
head(q2)
q2
q2 <- q2[-which(q2$V2==""), ]
q2
q <- q2$V5
q
gsub(",", "", q)
q <- gsub(",", "", q)
q <- as.numeric(q)
mean(q)
head(q2)
q2$V4 <- "countryNames"
head(Q2)
head(12)
head(q2)
q2 <- read.csv("q4_2.csv", header=FALSE)
q2 <- q2[-which(q2$V1==""), ]
q2 <- q2[-which(q2$V2==""), ]
q2
grep("^United", q2$V4)
grep("*United", q2$V4)
names(q2)
names(q2)[4]
names(q2)[4] <- "countryNames"
names(q2)
grep("^United",countryNames)
countryNames <- q2$countryNames
head(q2)
head(countryNames)
grep("^United",countryNames)
?grep
grep("^United",countryNames, value=TRUE)
grep("*United",countryNames, value=TRUE)
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", dest="q4_4_1.csv")
download.file(url="https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", dest="q4_4_2.csv")
q4_1 <- read.csv("q4_4_1.csv")
q4_2 <- read.csv("q4_4_2.csv")
head(q4_1)
head(q4_2)
head(mcg)
head(test2)
head(cg)
head(e)
head(mcg)
q4 <- merge(mcg, e, by.x=mcg$V1, by.y=e.CountryCode)
q4 <- merge(mcg, e, by.x=mcg$V1, by.y=e$CountryCode)
mcg$V2
q4 <- merge(mcg, e, by.x=mcg$V1, by.y=e$CountryCode)
?merge
mcg$V1
e$CountryCode
q4 <- merge(mcg, e, by.x=mcg$V1, by.y=e$CountryCode)
head(mcg2)
q4 <- merge(mcg2, e)
head(q4)
names(q4)
head(q4$Special.Notes)
q4$Special.Notes
?grep
grep("^Fiscal.*end.*June", q4$Special.Notes, value=TRUE)
q4[grepl("^Fiscal.*end.*June", q4$Special.Notes), ]
q4[grepl("^Fiscal.*end.*June", q4$Special.Notes), c(q4$CountryCode) ]
q4[grepl("^Fiscal.*end.*June", q4$Special.Notes), q4$CountryCode]
q4[grepl("^Fiscal.*end.*June", q4$Special.Notes), c(1,2,3)]
grep("^Fiscal.*end.*June", q4$Special.Notes, value=TRUE)
install.packages("quantmode")
install.packages(quantmode)
library(quantmode)
install.packages('quantmod')
library(quantmod)
amzn = getSymbols("AMZN", auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
sampletTimes
sampleTimes
weekdays("2015-01-16")
class(sampleTimes)
weekdays(sampleTimes[1])
years(sampleTimes[1])
year(sampleTimes[1])
format(sampleTimes[1], "%Y")
format(sampleTimes[], "%Y")
which(format(sampleTimes[], "%Y")=="2012")
grep("2012",format(sampleTimes[], "%Y"), value=TRUE)
length(grep("2012",format(sampleTimes[], "%Y"), value=TRUE))
length(which(format(sampleTimes[], "%Y")=="2012"))
length(which(format(sampleTimes[], "%Y")=="2012") & which(format(sampleTimes[], "%d")=="Monday")
)
length(which(format(sampleTimes[], "%d")=="Monday")
)
formate(SampleTimes[1], "%a")
format(SampleTimes[1], "%a")
format(sampleTimes[1], "%a")
format(sampleTimes[1], "%A")
length(which(format(sampleTimes[], "%Y")=="2012") & which(format(sampleTimes[], "%A")=="Monday"))
length(which(format(sampleTimes[], "%Y")=="2012") && which(format(sampleTimes[], "%A")=="Monday"))
which(format(sampleTimes[], "%A")=="Monday"))
which(format(sampleTimes[], "%A")=="Monday")
?which
year <- which(format(sampleTimes[], "%Y")=="2014")
head(year)
length(year)
year <- which(format(sampleTimes[], "%Y")=="2012")
length(year)
sampleTimes[year]
sampleTimes <- sampleTimes[year]
length(which(format(sampleTimes[], "%A")=="Monday"))
setwd("C:\git\RepData_PeerAssessment1")
setwd("C:\\git\\RepData_PeerAssessment1")
getwd()
d <- read.csv("activit\\activity.csv")
getwd()
d <- read.csv("activity\\activity.csv")
head(d)
class(d$date)
class(d$interval)
summary(d$date)
d$date
unique(d$date)
?as.date
?as.Date
d$date <- as.Date(d$date)
class(d$date)
head(d)
aggregate(interval ~ date, d, sum)
?hist
hist(d$interval)
hist(d$date)
?hist
head(d)
hist(d$steps)
summary(d$steps)
class(d$steps)
aggregate(steps ~ date, d, sum)
ag <- aggregate(steps ~ date, d, sum)
head(ag)
hist(ag$steps)
hist(ag$date)
?hist
hist(ag$date, breaks=3)
length(ag$date)
hist(ag$date, breaks=length(ag$date))
hist(ag$date, breaks=53
)
)
hist(ag$date, breaks=c(53))
hist(ag$date, breaks=5
)
hist(ag$steps)
mean(ag$steps)
median(ag$steps)
head(d)
?plot
unique(d$interval)
avg(d$steps)
mean(d$steps)
mean(ag$steps)
plot(x = unique(d$interval), y = mean(ag$steps), type="l")
length(unique(d$interval))
ag_2 <- aggregate(steps ~ interval, d, mean)
head(ag_@)
head(ag_2)
ag_3 <- aggregate(steps ~ interval, d, sum)
head(ag_3)
b <- ag_2
plot(x=b$interal, y=b$steps, type"l")
plot(x=b$interal, y=b$steps, type="l")
plot(x=b$interval, y=b$steps, type="l")
hist(ag$steps)
hist(ag$steps, xlab="Steps")
plot(x=b$interval, y=b$steps, type="l", xlab="interval", ylab="steps")
summary(b)
b[which(max(b$steps)), ]
which(max(b$steps))
b[which(b$steps=max(b$steps)), ]
b[which(b$steps==max(b$steps)), ]
length(is.na(d))
length(is.na(d$steps))
length(is.na(d))
summary(d)
lengh(is.na(d$date))
lenght(is.na(d$date))
length(is.na(d$date))
length(is.na(d$interval))
length(is.na(d$steps))
length(is.na(d))
?is.na
sum(is.na(d))
sum(is.na(d$steps))
sum(is.na(d$interval))
sum(is.na(d$steps))
sum(is.na(d)
)
sum(is.na(d))
head(is.na(d))
sum(is.na(d))
?hist
?plot
?ave
summary(d)
d2 <- d
?with
?ave
d2$steps[is.na(d2$steps)] <- with(d2, ave(interval, date, FUN = function(x) median(x, na.rm = TRUE)))[is.na(d2$steps)]
summary(d2)
libary(data.table)
library(data.table)
DT <- data.table(d)
DT[, steps := ifelse(is.na(steps)), median(date), steps]
DT[, steps := ifelse(is.na(steps)), median(interval), steps]
d2$steps[is.na(d2$steps)] <- with(d2, ave(interval, date, FUN = function(x) median(x, na.rm = TRUE)))[is.na(d2$steps)]
d2 <- d
d2$steps[is.na(d2$steps)] <- with(d2, ave(steps, date, FUN = function(x) median(x)))[is.na(d2$steps)]
summary(d2)
data <- d2
summary(data)
d2$steps[is.na(d2$steps)] <- with(d2, ave(steps, date, FUN = function(x) median(x, rm.na = TRUE)))[is.na(d2$steps)]
d2$steps[is.na(d2$steps)] <- with(d2, ave(steps, date, FUN = function(x) median(x, na.rm = TRUE)))[is.na(d2$steps)]
summary(d2)
d2$steps[is.na(d2$steps)] <- with(d2, ave(steps, interval, FUN = function(x) median(x)))[is.na(d2$steps)]
summary(d2)
d2$steps[is.na(d2$steps)] <- with(d2, ave(steps, interval, FUN = function(x) median(x, na.rm=TRUE)))[is.na(d2$steps)]
summary(d2)
d = d2
getwd()
setwd("activity")
data <- read.csv("activity.csv")
d <- data
d2 <- d
d2$steps[is.na(d2$steps)] <- with(d2, ave(steps, date, FUN = function(x) median(x, na.rm=TRUE)))[is.na(d2$steps)]
summary(d2)
d2$steps[is.na(d2$steps)] <- with(d2, ave(steps, interval, FUN = function(x) median(x, na.rm=TRUE)))[is.na(d2$steps)]
sumary(d2)
summary(d2)
summary(d2$steps)
data$steps[is.na(data$steps)] <- with(data, ave(steps, date, FUN = function(x) median(x, rm.na=TRUE)))[is.na(data$steps)
]
data$steps[is.na(data$steps)] <- with(data, ave(steps, date, FUN = function(x) median(x, na.rm=TRUE)))[is.na(data$steps)]
summary(data$steps)
summary(data)
summary(d)
class(d$date)
data <- read.csv("activity.csv")
d = data
summary(d)
d$date <- as.Date(d$date)
summary(d)
data$steps[is.na(data$steps)] <- with(data, ave(steps, interval, FUN = function(x) median(x, rm.na=TRUE)))[is.na(data$steps)]
data$steps[is.na(data$steps)] <- with(data, ave(steps, interval, FUN = function(x) median(x, na.rm=TRUE)))[is.na(data$steps)]
summary(data)
data = d
summary(d)
summary(data)
data$steps[is.na(data$steps)] <- with(data, ave(steps, interval, FUN = function(x) median(x, na.rm=TRUE)))[is.na(data$steps)]
summary(data)
ag <- aggregate(steps ~ date, data, sum)
hist(ag$steps, xlab="Steps", main="Steps")
ag
mean(ag$steps)
summary(data)
summary(d)
?weekdays
summary(weekdays(ag$date))
head(weekdays(ag$date))
?with
?ave
?with
ave(d$steps, d$interval, FUN = function(x) median(x, na.rm=TRUE)))
ave(d$steps, d$interval, FUN = function(x) median(x, na.rm=TRUE))
ave(d$steps, d$interval, FUN = function(x) median(x, na.rm=TRUE))[is.na(d$steps)]
class(ave(d$steps, d$interval, FUN = function(x) median(x, na.rm=TRUE)))
?ave
length(ave(d$steps, d$interval, FUN = function(x) median(x, na.rm=TRUE)))
data
head(ag)
summary(data)
weekds(data$date) %in% c("Saturday", "Sunday")
weekdays(data$date) %in% c("Saturday", "Sunday")
weekend <- weekdays(data$date) %in% c("Saturday", "Sunday")
data <- cbind(data, weekend)
head(data)
weekdays("2012-10-01")
weekdays(2012-10-01)
weekday(data$date[0])
weekdays(data$date[0])
weekdays(data$date[1])
data$date[1]
a <- unique(data$date(weekend==TRUE))
a <- unique(data$date[which(weekend==TRUE)])
head(a)
a[1]
weekdays(a[1])
weekdays(a[2])
weekdays(a[3])
weekdays(a[4])
head(data)
summary(data)
html_document:
//
data <- read.csv("activity.csv")
data$date <- as.Date(data$date)
data$steps[is.na(data$steps)] <- with(data, ave(steps, interval, FUN = function(x) mean(x, na.rm=TRUE)))[is.na(data$steps)]
summary(data)
zzz <- read.csv("activity.csv")
zzz$date <- as.Date(zzz$date)
summary(zzz)
data <- zzz
data$steps[is.na(data$steps)] <- with(data, ave(steps, interval, FUN = function(x) median(x, na.rm=TRUE)))[is.na(data$steps)]
summary(data)
?lattice
?xyplot
data$weekend <- weekdays(data$date) %in% c("Saturday", "Sunday")
summary(data)
a <- data$weekend
levels(a) = c("Weekend", "Weekday")
head(a)
a
a <- data$weekend
class(a)
a <- as.factor(a)
levels(a) = c("Weeday", "Weekend")
head(a)
data$weekend <- levels(as.factor(data$weekend)) = c("Weekday", "Weekend")
data$weekend <- as.factor(data$weekend)
head(data)
levels(data$weekend) = c("Weekday", "Weekend")
head(data)
weekdays(data$date[1])
data$date[1]
xyplot(steps ~ interval | Weekday, dat, type = "l", layout = c(1,2))
library(lattice)
library(dyplyr)
library(dplyr)
